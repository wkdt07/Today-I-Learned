3-1)

1부터 n 까지의 합을 구하는 가장 간단한 알고리즘은, f(n) = n+f(n-1), f(1) = 1이라는 함수를 재귀해서 구하는 것이다.
해당 알고리즘의 경우, 시간복잡도는 n의 크기와 같으므로 O(n)이다.

다른 알고리즘의 경우, 등차수열의 합 공식을 활용한 f(n) = (n)(n+1)/2을 사용하는 것이다.
해당 알고리즘의 경우, 시간복잡도는 O(1)이다.

3-2)

명제: 자연수 n에 대해, n**2+5가 홀수이면 n은 짝수이다.

대우: 자연수 n에 대해, n이 홀수이면 n**2+5는 짝수이다.

대우가 참이면 명제도 참이므로, 대우를 통해서 해당 명제를 증명해본다.

n = 2*k+1이라 하였을 때, 이를 n**2+5에 대입하면 다음과 같다
(2*k+1)**2+5 = (4*(k**2)+4*k+1)+5 = 4*(k**2)+4*k+6

이를 2로 묶으면 다음과 같다.
2*(2*(k**2)+2*k+3)

2로 묶을 수 있는 수는 짝수이므로, n**2+5는 짝수가 된다.
따라서 대우 '자연수 n에 대해, n이 홀수이면 n**2+5는 짝수이다.'는 참이다.

해당 대우가 참이므로 '자연수 n에 대해, n**2+5가 홀수이면 n은 짝수이다.'라는 명제는 참이다.