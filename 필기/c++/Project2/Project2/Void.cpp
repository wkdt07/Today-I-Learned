//#include <stdio.h>
//
//
//void Output(const int* pI) {
//	int i = *pI;
//}
//
//
//int main() {
//	// void
//	// 반환하는 값이 없을 때
//	// 일반 함수는 선언한 이름대로의 값을 반환 해야함(int, float 같은거)
//
//
//	// 그럼 얘가 포인터랑 엮이면?
//
//	//void 포인터
//
//	void* pVoid = nullptr; // 해당 주소에 있는 값을 void로 해석하겠다? x 안 정해둔거임. => 어떤 변수의 주소던 다 받을 수 있다.  
//	float* pFloat = nullptr;
//
//	{
//		int a = 0;
//		float f = 0.f;
//		double d = 0.;
//		long long ll = 0;
//
//		pVoid = &a;
//		pVoid = &f;
//		pVoid = &d;
//		pVoid = &ll;
//
//		// 특정 값의 주소로 해석하겠다는 약속이 없는 상태임. 그래서 아무거나 받을 수 있음
//		
//
//		// => 1) 이를 해석하는 '역참조'가 불가능하다!
//		//*pVoid // 이거 오류난다. 
//
//		// 2) 주소 연산도 불가능하다 -> 한 칸에 몇 바이트를 쓸지가 안 정해져 있는데 어떻게 연산할건데?
//		//pVoid+1 
//	}
//
//	// <원본의 자료형을 정하지 않음>
//	// 1. 어떠한 타입의 변수의 주소든 다 저장 가능 => 그래서 생기는게 아래 2개
//	// 2. 역참조 불가능
//	// 3. 주소 연산 불가능
//
//	return 0;
//}