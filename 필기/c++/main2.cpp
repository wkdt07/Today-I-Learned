//
// Created by user on 24. 4. 29.
//

#include <stdio.h>


// 포인터
int main(){

    // 포인터 변수
    // 포인터 : 주소를 가리키는 변수
    // 포인터 변수는 포인터 기능을 하는 변수

    int* pInt = nullptr; // nullptr 는 0과 같음. 아무 주소도 가리키지 않는다는 뜻
    //int*? 별이 붙는 순간, 포인터 변수로 바뀐다. 따라서 *int 변수를 가리키는* 변수가 된다.

    int i = 100;
    int* poInt = &i; // 이제 i의 주소를 저장하는 변수가 됐다.
    // cpp의 가장 큰 능력은 메모리를 직접적으로 변수로 사용할 수 있다는 것


    // 주소로 접근
    *poInt = 110;//*poInt : 참조 -> i로 가는 것
    printf("%d",i); // 110


    // 주소의 단위
    // 바이트 단위 -> 그 사이 비트 단위로는 주소를 쪼갤 수 없다.

    // 그럼 왜 int형만 담을 수 있도록 포인트 변수를 지정할까? (특정 데이터 타입만)
    // 시작 지점을 체크하고, 4바이트만 관리하려고
    // '나는 내가 가리키는 주소를 모두 int라 받아들이고 메모리에 할당된 비트들을 계산해서 할당해줄거다'
    // 그럼 4바이트의 다른 애들을 집어넣어도 상관 없을까?
    // 아님
    // 정수 자료형과 실수 자료형은 애초에 비트 계산 방법 자체가 다름
    // 이건 자료형 배웠을 때 다시 생각해라.

    // 그럼 그런 애를 참조해서 강제로 int화 해버리면 상당히 곤란해짐
    // 애초에 포인터 변수를 할당할 때 앞으로 어떻게 해당 메모리를 해석할 건지도 확인한다.

//    float f = 3.f;
//    int* poiInt = (int*)&f;

    // 정리
    // (자료형) + (*변수명)
    // 자료형 : 해당 포인터에게 전달된 주소를 '해석하는' 단위

    return 0;
}