프로그래밍: 컴퓨터에게 작업을 지시
프로그래밍 언어: 컴퓨터에게 작업을 지시하는 방법, 도구
ex) 파이썬, 자바, c, c++, js.........


파이썬의 장점!!
1. 간결하고 쉽기 때문에 초보자들이 학습하기 좋다.
ex) c
#include<studio.h>

int main(void):  /c언어는 전처리가 필요
{

		printf("g\hello world\n);
		return 0;



}


파이썬은 print('hello world')로 끝.


2. 파이썬을 배우는 이유? 다양한 라이브러리 때문 : 다양한 분야에 활용 가능하다. 

파이썬이 어느 분야에 사용되는지 검색해봐라
ex) 데이터 분야? 판다 
임베디드도 가능(라즈베리 파이)

백엔드로는 장고, 플라스크


3. 파이썬 인터프리터
: 파이썬 프로그램을 실행해주는 도구

우린 vscode를 사용

vscode: 텍스트 에디터, IDE(통합 검색 환경, 뭐의 약자인지 검색해봐라)가 아님. 여기에 익스텐션을 추가해서 마치 IDE처럼 사용

<python>
IDE는 파이참, 쥬피터노트북 사용. 알고리즘은 파이참으로. 물론 파이참에도 장고 같은거 다운받아서 vscode처럼 사용 가능
쥬피터 노트북은 관통 pjt때. 그래프 보기 편함. 그래서 데이터 분석에서 주로 사용.

<IDE>
Python: PyCharm, 쥬피터노트북
java : IntelliJ
C# : Visual Studio
------------------------------
+)런타임: 실행머신
ex) 닌텐도 팩 -> 닌텐도가 필요. 여기서 닌텐도의 역할이 런타임

파이썬의 런타임? 파이썬으로 만든 app
런타임<----------------------------CPython, Pypy(Cpython에서 속도를 올린 런타임)


============================================================


문장(statement) : pdf에선 문장 안에 표현식이 존재. 실행 가능한 코드(조건문, 반복문, 함수 ...등)들을 모두 문장이라 함.
표현식(expression) : 계산이나 연산을 통해 결과를 얻을 수 있는 코드
->평가 : 표현식을 계산하여 결과를 얻어내는 과정
ex) result= 2 + 3
    print(result)
 